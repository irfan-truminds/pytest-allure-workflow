{"name": "test_network_setup_create_network_empty_json_values", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'error': {'code': 'VALIDATION_FAILED',\\n           'details': [{'code': 'required',\\n                        'info': {'missingProperty': 'name'},\\n                        'message': \"must have required property 'name'\",\\n                        'path': '/configuration'},\\n                       {'code': 'required',\\n                        'info': {'missingProperty': 'clientIsolation'},\\n                        'message': 'must have required property '\\n                                   \"'clientIsolation'\",\\n                        'path': '/configuration'}],\\n           'message': 'The request body is invalid. See error object `details` '\\n                      'property for more info.',\\n           'name': 'UnprocessableEntityError',\\n           'statusCode': 422}} == {'error': {'message': 'The `Network` instance is not valid. Details: '\\n                      '`networkName` can\\'t be blank (value: \"\"); '\\n                      '`description` can\\'t be blank (value: \"\").',\\n           'statusCode': 422}}\n  Differing items:\n  {'error': {'code': 'VALIDATION_FAILED', 'details': [{'code': 'required', 'info': {'missingProperty': 'name'}, 'message...request body is invalid. See error object `details` property for more info.', 'name': 'UnprocessableEntityError', ...}} != {'error': {'message': 'The `Network` instance is not valid. Details: `networkName` can\\'t be blank (value: \"\"); `description` can\\'t be blank (value: \"\").', 'statusCode': 422}}\n  Full diff:\n    {\n  -  'error': {'message': 'The `Network` instance is not valid. Details: '\n  -                       '`networkName` can\\'t be blank (value: \"\"); '\n  -                       '`description` can\\'t be blank (value: \"\").',\n  +  'error': {'code': 'VALIDATION_FAILED',\n  +            'details': [{'code': 'required',\n  +                         'info': {'missingProperty': 'name'},\n  +                         'message': \"must have required property 'name'\",\n  +                         'path': '/configuration'},\n  +                        {'code': 'required',\n  +                         'info': {'missingProperty': 'clientIsolation'},\n  +                         'message': 'must have required property '\n  +                                    \"'clientIsolation'\",\n  +                         'path': '/configuration'}],\n  +            'message': 'The request body is invalid. See error object `details` '\n  +                       'property for more info.',\n  +            'name': 'UnprocessableEntityError',\n               'statusCode': 422},\n    }", "trace": "self = <shastacloud_test_automation.tests.shasta_be.test_network.TestNetwork object at 0x7f336ad45940>\nnetwork_setup = <libs.shasta_be.network.NetworkSetup object at 0x7f336a912640>\nplatform_admin_access_token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlrZkhZUy1kaVpYcENONTFmU2tFZiJ9.eyJodHRwOi8vc2hhc3RhLWNsb3VkLm5ldC9vcmdJ...ZR1fjCpDkcj7vQKWzIK91sMkvG_-hNBa00jSntWBy2D5EK_DrVJJ9Dq3gSwqsLx9tQ5eaEZKc8CNGK26mwOJkngAiBqsTD6se-EMZnnGiX5vmbxP_8ENZQ'\nplatform_admin_org_id = 1\n\n    def test_network_setup_create_network_empty_json_values(self, network_setup, platform_admin_access_token, platform_admin_org_id):\n        \"\"\"\n        Test network_setup create network failure (empty JSON values)\n        \"\"\"\n    \n        # make sure login was successful\n        network_setup.access_token = platform_admin_access_token\n        assert network_setup.access_token is not None\n    \n        payload = {\n            \"networkName\": \"\",\n            \"networkTypeId\": NETWORK_TYPES[0][\"networkTypeId\"],\n            \"configuration\": {\n                \"description\": \"\"\n            },\n            \"venueId\": [],\n            \"orgId\": platform_admin_org_id\n        }\n    \n        response = network_setup.create_network(payload=payload)\n    \n>       assert check_response(\n            response, expected_status_code=constants.ERROR_RSP_UNPROC_ENTITY,\n            expected_content_type= \"JSON\", expected_response_body=ERROR_RESPONSES[\"create_network\"][\"empty_json_values\"]\n        )\n\ntests/shasta_be/test_network.py:492: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [422]>, expected_status_code = 422, expected_content_type = 'JSON'\nexpected_response_body = {'error': {'message': 'The `Network` instance is not valid. Details: `networkName` can\\'t be blank (value: \"\"); `description` can\\'t be blank (value: \"\").', 'statusCode': 422}}\njson_schema = None, request_payload_sent = None\n\n    def check_response(\n            response, expected_status_code=None, expected_content_type=None,\n            expected_response_body=None, json_schema=None, request_payload_sent=None\n        ):\n        \"\"\"\n        A generic function to perform basic validation of responses\n        \"\"\"\n        if expected_status_code is not None:\n            assert response.status_code == expected_status_code\n    \n        if expected_content_type is not None:\n            if expected_content_type == \"JSON\":\n                # verify that response content type is JSON\n                assert 'application/json' in response.headers.get('Content-Type')\n    \n                # further tests that require response body to be JSON\n                response_json = response.json()\n    \n                if expected_response_body is not None:\n>                   assert response_json == expected_response_body\nE                   assert {'error': {'code': 'VALIDATION_FAILED',\\n           'details': [{'code': 'required',\\n                        'info': {'missingProperty': 'name'},\\n                        'message': \"must have required property 'name'\",\\n                        'path': '/configuration'},\\n                       {'code': 'required',\\n                        'info': {'missingProperty': 'clientIsolation'},\\n                        'message': 'must have required property '\\n                                   \"'clientIsolation'\",\\n                        'path': '/configuration'}],\\n           'message': 'The request body is invalid. See error object `details` '\\n                      'property for more info.',\\n           'name': 'UnprocessableEntityError',\\n           'statusCode': 422}} == {'error': {'message': 'The `Network` instance is not valid. Details: '\\n                      '`networkName` can\\'t be blank (value: \"\"); '\\n                      '`description` can\\'t be blank (value: \"\").',\\n           'statusCode': 422}}\nE                     Differing items:\nE                     {'error': {'code': 'VALIDATION_FAILED', 'details': [{'code': 'required', 'info': {'missingProperty': 'name'}, 'message...request body is invalid. See error object `details` property for more info.', 'name': 'UnprocessableEntityError', ...}} != {'error': {'message': 'The `Network` instance is not valid. Details: `networkName` can\\'t be blank (value: \"\"); `description` can\\'t be blank (value: \"\").', 'statusCode': 422}}\nE                     Full diff:\nE                       {\nE                     -  'error': {'message': 'The `Network` instance is not valid. Details: '\nE                     -                       '`networkName` can\\'t be blank (value: \"\"); '\nE                     -                       '`description` can\\'t be blank (value: \"\").',\nE                     +  'error': {'code': 'VALIDATION_FAILED',\nE                     +            'details': [{'code': 'required',\nE                     +                         'info': {'missingProperty': 'name'},\nE                     +                         'message': \"must have required property 'name'\",\nE                     +                         'path': '/configuration'},\nE                     +                        {'code': 'required',\nE                     +                         'info': {'missingProperty': 'clientIsolation'},\nE                     +                         'message': 'must have required property '\nE                     +                                    \"'clientIsolation'\",\nE                     +                         'path': '/configuration'}],\nE                     +            'message': 'The request body is invalid. See error object `details` '\nE                     +                       'property for more info.',\nE                     +            'name': 'UnprocessableEntityError',\nE                                  'statusCode': 422},\nE                       }\n\nlibs/common_utils.py:60: AssertionError"}, "description": "\n        Test network_setup create network failure (empty JSON values)\n        ", "attachments": [{"name": "stdout", "source": "13129dc8-860c-4793-8af7-e1cbf54a43f8-attachment.txt", "type": "text/plain"}], "start": 1661840360500, "stop": 1661840360570, "uuid": "c7552209-251d-4601-94fd-a2cfff4c884b", "historyId": "101ccfbed5cba9c74a32468591918ad7", "testCaseId": "8175e177c395e6b9c2a6794408ced002", "fullName": "tests.shasta_be.test_network.TestNetwork#test_network_setup_create_network_empty_json_values", "labels": [{"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.shasta_be"}, {"name": "suite", "value": "test_network"}, {"name": "subSuite", "value": "TestNetwork"}, {"name": "host", "value": "GURM-CGW1JG3"}, {"name": "thread", "value": "30535-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.shasta_be.test_network"}]}