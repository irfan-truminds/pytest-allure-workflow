# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  download-upload-test:
    runs-on: ubuntu-latest
    steps:
    - run: |
          mkdir -p ./allure-reports/history
          mkdir ./allure-results
          echo 'abc1234' > ./allure-reports/history/trends.json
          echo 'xyz9876' > ./allure-reports/history/data.json
    - name: upload test
      uses: actions/upload-artifact@v2
      with:
        name: allure-report-history
        path: ./allure-reports/history
    - name: Download test
      uses: dawidd6/action-download-artifact@v2
      with:
        name: allure-report-history
        path: ./allure-results/history
        workflow_conclusion: completed
        if_no_artifact_found: ignore
    - name: list files
      run: |
        ls -al ./allure-results/history
      

#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
      
#       - name: install Allure CLI tool
#         shell: bash
#         run: |
#           wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.18.1/allure-commandline-2.18.1.tgz
#           tar -xzf allure-commandline-2.18.1.tgz
#           allure-2.18.1/bin/allure generate test-reports
